const multer = require('multer');

// будем определяь куда и как сохранять файлы, 
// принимает в себя обьект, где мы пожем задать определенные ф-ии, 
// которые будут вызваны когда файл будет загружаться
const storage = multer.diskStorage({
  // будем говорить, куда необходимо складывать данный файл
  destination(req, file, cb){
    // для того чтобы выполнить данную ф-ю - необходимо обратиться к cb
    // куда 1м параметром передаем ошибку, если она есть. Но ошибок нет -
    // поэтому передаем null
    // 2м параметром передаем путь до папки, 
    // куда будем складывать все картинки
    cb(null, 'images');
  },
  // будем говорить, как назвать новый файл
  filename(req, file,cb){
    // 1м параметром ошибку - null
    // 2м - формируем название файла, важно выбрать уникальное название
    // чтобы для каждого файла было разное
    // cb(null, `${new Date().toISOString().replace(/:/g, '-')}-${file.originalname.replace(/\s/g, '_')}`);
    cb(null, Date.now() + '-' + file.originalname);
  }
});

// укажем типы файлов, которые разрешены для загрузки
// массив содержащий строки тех mimetype, 
// которые разрешены для данного файла
const allowedTypes = ['image/png', 'image/jpg', 'image/jpeg'];

// определенная валидация для файлов, можем ограничить расширения файлов
// которые загружаем
const fileFilter = (req, file, cb) => {
  // в if пишем валидацию. нужно убедиться, что это изображение
  // данная функция проверяется через параметр mimetype, который 
  // присутствует у обьекта file
  if (allowedTypes.includes(file.mimetype)) {
    // null - нет ошибки, true - валидация прошла успешно
    cb(null, true);
  } else {
    // false - валидация не пройдена, файл не можем загрузить
    cb(null, false);
  }
};

module.exports = multer({
  storage,
  fileFilter
});